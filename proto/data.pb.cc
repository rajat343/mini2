// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: data.proto
// Protobuf C++ Version: 5.29.3

#include "data.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace dataflow {

inline constexpr Record::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : row_data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Record::Record(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RecordDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RecordDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RecordDefaultTypeInternal() {}
  union {
    Record _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RecordDefaultTypeInternal _Record_default_instance_;

inline constexpr RecordBatch::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : records_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RecordBatch::RecordBatch(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RecordBatchDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RecordBatchDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RecordBatchDefaultTypeInternal() {}
  union {
    RecordBatch _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RecordBatchDefaultTypeInternal _RecordBatch_default_instance_;
}  // namespace dataflow
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_data_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_data_2eproto = nullptr;
const ::uint32_t
    TableStruct_data_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::dataflow::Record, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::dataflow::Record, _impl_.row_data_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::dataflow::RecordBatch, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::dataflow::RecordBatch, _impl_.records_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::dataflow::Record)},
        {9, -1, -1, sizeof(::dataflow::RecordBatch)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::dataflow::_Record_default_instance_._instance,
    &::dataflow::_RecordBatch_default_instance_._instance,
};
const char descriptor_table_protodef_data_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\ndata.proto\022\010dataflow\032\033google/protobuf/"
    "empty.proto\"\032\n\006Record\022\020\n\010row_data\030\001 \001(\t\""
    "0\n\013RecordBatch\022!\n\007records\030\001 \003(\0132\020.datafl"
    "ow.Record2\312\001\n\013DataService\0228\n\nSendRecord\022"
    "\020.dataflow.Record\032\026.google.protobuf.Empt"
    "y\"\000\022B\n\017SendRecordBatch\022\025.dataflow.Record"
    "Batch\032\026.google.protobuf.Empty\"\000\022=\n\tEndSt"
    "ream\022\026.google.protobuf.Empty\032\026.google.pr"
    "otobuf.Empty\"\000b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_data_2eproto_deps[1] =
    {
        &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::absl::once_flag descriptor_table_data_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_data_2eproto = {
    false,
    false,
    342,
    descriptor_table_protodef_data_2eproto,
    "data.proto",
    &descriptor_table_data_2eproto_once,
    descriptor_table_data_2eproto_deps,
    1,
    2,
    schemas,
    file_default_instances,
    TableStruct_data_2eproto::offsets,
    file_level_enum_descriptors_data_2eproto,
    file_level_service_descriptors_data_2eproto,
};
namespace dataflow {
// ===================================================================

class Record::_Internal {
 public:
};

Record::Record(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dataflow.Record)
}
inline PROTOBUF_NDEBUG_INLINE Record::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::dataflow::Record& from_msg)
      : row_data_(arena, from.row_data_),
        _cached_size_{0} {}

Record::Record(
    ::google::protobuf::Arena* arena,
    const Record& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Record* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:dataflow.Record)
}
inline PROTOBUF_NDEBUG_INLINE Record::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : row_data_(arena),
        _cached_size_{0} {}

inline void Record::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Record::~Record() {
  // @@protoc_insertion_point(destructor:dataflow.Record)
  SharedDtor(*this);
}
inline void Record::SharedDtor(MessageLite& self) {
  Record& this_ = static_cast<Record&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.row_data_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Record::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Record(arena);
}
constexpr auto Record::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Record),
                                            alignof(Record));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Record::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Record_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Record::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Record>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Record::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Record>(), &Record::ByteSizeLong,
            &Record::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Record, _impl_._cached_size_),
        false,
    },
    &Record::kDescriptorMethods,
    &descriptor_table_data_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Record::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 32, 2> Record::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dataflow::Record>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string row_data = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Record, _impl_.row_data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string row_data = 1;
    {PROTOBUF_FIELD_OFFSET(Record, _impl_.row_data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\17\10\0\0\0\0\0\0"
    "dataflow.Record"
    "row_data"
  }},
};

PROTOBUF_NOINLINE void Record::Clear() {
// @@protoc_insertion_point(message_clear_start:dataflow.Record)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.row_data_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Record::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Record& this_ = static_cast<const Record&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Record::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Record& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:dataflow.Record)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string row_data = 1;
          if (!this_._internal_row_data().empty()) {
            const std::string& _s = this_._internal_row_data();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dataflow.Record.row_data");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:dataflow.Record)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Record::ByteSizeLong(const MessageLite& base) {
          const Record& this_ = static_cast<const Record&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Record::ByteSizeLong() const {
          const Record& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:dataflow.Record)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string row_data = 1;
            if (!this_._internal_row_data().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_row_data());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Record::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Record*>(&to_msg);
  auto& from = static_cast<const Record&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dataflow.Record)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_row_data().empty()) {
    _this->_internal_set_row_data(from._internal_row_data());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Record::CopyFrom(const Record& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dataflow.Record)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Record::InternalSwap(Record* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.row_data_, &other->_impl_.row_data_, arena);
}

::google::protobuf::Metadata Record::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RecordBatch::_Internal {
 public:
};

RecordBatch::RecordBatch(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dataflow.RecordBatch)
}
inline PROTOBUF_NDEBUG_INLINE RecordBatch::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::dataflow::RecordBatch& from_msg)
      : records_{visibility, arena, from.records_},
        _cached_size_{0} {}

RecordBatch::RecordBatch(
    ::google::protobuf::Arena* arena,
    const RecordBatch& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RecordBatch* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:dataflow.RecordBatch)
}
inline PROTOBUF_NDEBUG_INLINE RecordBatch::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : records_{visibility, arena},
        _cached_size_{0} {}

inline void RecordBatch::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RecordBatch::~RecordBatch() {
  // @@protoc_insertion_point(destructor:dataflow.RecordBatch)
  SharedDtor(*this);
}
inline void RecordBatch::SharedDtor(MessageLite& self) {
  RecordBatch& this_ = static_cast<RecordBatch&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* RecordBatch::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RecordBatch(arena);
}
constexpr auto RecordBatch::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(RecordBatch, _impl_.records_) +
          decltype(RecordBatch::_impl_.records_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(RecordBatch), alignof(RecordBatch), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&RecordBatch::PlacementNew_,
                                 sizeof(RecordBatch),
                                 alignof(RecordBatch));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RecordBatch::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RecordBatch_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RecordBatch::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RecordBatch>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RecordBatch::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RecordBatch>(), &RecordBatch::ByteSizeLong,
            &RecordBatch::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RecordBatch, _impl_._cached_size_),
        false,
    },
    &RecordBatch::kDescriptorMethods,
    &descriptor_table_data_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RecordBatch::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> RecordBatch::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dataflow::RecordBatch>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .dataflow.Record records = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RecordBatch, _impl_.records_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .dataflow.Record records = 1;
    {PROTOBUF_FIELD_OFFSET(RecordBatch, _impl_.records_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::dataflow::Record>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void RecordBatch::Clear() {
// @@protoc_insertion_point(message_clear_start:dataflow.RecordBatch)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.records_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RecordBatch::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RecordBatch& this_ = static_cast<const RecordBatch&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RecordBatch::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RecordBatch& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:dataflow.RecordBatch)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .dataflow.Record records = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_records_size());
               i < n; i++) {
            const auto& repfield = this_._internal_records().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:dataflow.RecordBatch)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RecordBatch::ByteSizeLong(const MessageLite& base) {
          const RecordBatch& this_ = static_cast<const RecordBatch&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RecordBatch::ByteSizeLong() const {
          const RecordBatch& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:dataflow.RecordBatch)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .dataflow.Record records = 1;
            {
              total_size += 1UL * this_._internal_records_size();
              for (const auto& msg : this_._internal_records()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RecordBatch::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RecordBatch*>(&to_msg);
  auto& from = static_cast<const RecordBatch&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dataflow.RecordBatch)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_records()->MergeFrom(
      from._internal_records());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RecordBatch::CopyFrom(const RecordBatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dataflow.RecordBatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RecordBatch::InternalSwap(RecordBatch* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.records_.InternalSwap(&other->_impl_.records_);
}

::google::protobuf::Metadata RecordBatch::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace dataflow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_data_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
